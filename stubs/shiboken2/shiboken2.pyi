from typing import Any

class VoidPtr:
    def __init__(self, *args, **kwargs) -> None: ...
    def toBytes(self, *args, **kwargs) -> Any: ...
    def __eq__(self, other: object) -> bool: ...
    def __ge__(self, other: object) -> bool: ...
    def __gt__(self, other: object) -> bool: ...
    def __int__(self) -> int: ...
    def __le__(self, other: object) -> bool: ...
    def __len__(self) -> int: ...
    def __lt__(self, other: object) -> bool: ...
    def __ne__(self, other: object) -> bool: ...

def _unpickle_enum(*args, **kwargs) -> Any: ...
def createdByPython(*args, **kwargs) -> Any: ...
def delete(*args, **kwargs) -> Any: ...
def dump(*args, **kwargs) -> Any: ...
def getAllValidWrappers(*args, **kwargs) -> Any: ...
def getCppPointer(*args, **kwargs) -> Any: ...
def invalidate(*args, **kwargs) -> Any: ...
def isValid(*args, **kwargs) -> Any: ...
def ownedByPython(*args, **kwargs) -> Any: ...
def wrapInstance(*args, **kwargs) -> Any: ...

class Object:
    pass
